lexer.readPunctuation = function(STREAM,INDEX,LINE,COLUMN)
	local column,index,lexeme,type;
	index = INDEX + 3;
	column = COLUMN + 3;
	lexeme = string.sub(STREAM,INDEX,index);
	if lexeme == " += " then type = "PLUS-EQUAL";
	elseif lexeme == " -= " then type = "MINUS-EQUAL";
	elseif lexeme == " *= " then type = "ASTERISK-EQUAL";
	elseif lexeme == " /= " then type = "SLASH-EQUAL";
	elseif lexeme == " %= " then type = "PERCENT-EQUAL";
	elseif lexeme == " := " then type = "COLON-EQUAL";
	elseif lexeme == " << " then type = "LESS";
	elseif lexeme == " <= " then type = "LESS-EQUAL";
	elseif lexeme == " == " then type = "DOUBLE-EQUAL";
	elseif lexeme == " != " then type = "NOT-EQUAL";
	elseif lexeme == " >= " then type = "GREATER-EQUAL";
	elseif lexeme == " >> " then type = "GREATER";
	else
		index = index - 1;
		column = column - 1;
		lexeme = string.sub(STREAM,INDEX,index);
		if lexeme == " = " then type = "EQUAL";
		elseif lexeme == " + " then type = "PLUS";
		elseif lexeme == " - " then type = "MINUS";
		elseif lexeme == " * " then type = "ASTERISK";
		elseif lexeme == " / " then type = "SLASH";
		elseif lexeme == " % " then type = "PERCENT";
		else
			index = index - 2;
			column = column - 2;
			lexeme = string.sub(STREAM,INDEX,index);
			if lexeme == " " then type = "SPACE";
			elseif lexeme == "(" then type = "PARENTHESIS_OPEN";
			elseif lexeme == ")" then type = "PARENTHESIS_CLOSE";
			elseif lexeme == "[" then type = "BRACKET_OPEN";
			elseif lexeme == "]" then type = "BRACKET_CLOSE";
			elseif lexeme == "{" then type = "BRACE_OPEN";
			elseif lexeme == "}" then type = "BRACE_CLOSE";
			elseif lexeme == "." then type = "DOT";
			elseif lexeme == "," then type = "COMMA";
			elseif lexeme == ":" then type = "COLON";
			elseif lexeme == ";" then type = "SEMICOLON";
			elseif lexeme == "+" then type = "POSITIVE";
			elseif lexeme == "-" then type = "NEGATIVE";
			elseif lexeme == "&" then type = "AMPERSAND";
			else type = "INVALID_PUNCTUATION";
			end;
		end;
	end;
	return lexer.createToken(type,nil,lexeme,LINE,COLUMN),index + 1,column + 1;
end;
